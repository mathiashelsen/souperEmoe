#ifndef _ISA_6502_HPP
#define _ISA_6502_HPP

#include <stdint.h>

typedef enum {
  ORA,
  AND,
  EOR,
  STA,
  LDA,
  CMP,
  SBC,
  NOP,
  LDX,
  STX,
  LDY,
  STY,
  DEC,
  INC,
  TAX,
  TAY,
  TXA,
  TYA,
  DEX,
  DEY,
  INX,
  INY,
  ADC,
  SED,
  CLD,
  CLC,
  SEC
} opCodeType;

typedef enum {
  _ZPX_,
  ZP,
  Imm,
  Abs,
  _ZP_Y,
  ZPX,
  ZPY,
  AbsY,
  AbsX,
  Impl
} addrModeType;

typedef struct {
  uint8_t       _hexCode;
  opCodeType    _opCode;
  addrModeType  _addrMode;
} instrType;

static instrType instr[256] =
{
  {0x00, NOP, Impl},
  {0x01, NOP, Impl},
  {0x02, NOP, Impl},
  {0x03, NOP, Impl},
  {0x04, NOP, Impl},
  {0x05, NOP, Impl},
  {0x06, NOP, Impl},
  {0x07, NOP, Impl},
  {0x08, NOP, Impl},
  {0x09, NOP, Impl},
  {0x0a, NOP, Impl},
  {0x0b, NOP, Impl},
  {0x0c, NOP, Impl},
  {0x0d, NOP, Impl},
  {0x0e, NOP, Impl},
  {0x0f, NOP, Impl},
  {0x10, NOP, Impl},
  {0x11, NOP, Impl},
  {0x12, NOP, Impl},
  {0x13, NOP, Impl},
  {0x14, NOP, Impl},
  {0x15, NOP, Impl},
  {0x16, NOP, Impl},
  {0x17, NOP, Impl},
  {0x18, CLC, Impl},
  {0x19, NOP, Impl},
  {0x1a, NOP, Impl},
  {0x1b, NOP, Impl},
  {0x1c, NOP, Impl},
  {0x1d, NOP, Impl},
  {0x1e, NOP, Impl},
  {0x1f, NOP, Impl},
  {0x20, NOP, Impl},
  {0x21, NOP, Impl},
  {0x22, NOP, Impl},
  {0x23, NOP, Impl},
  {0x24, NOP, Impl},
  {0x25, NOP, Impl},
  {0x26, NOP, Impl},
  {0x27, NOP, Impl},
  {0x28, NOP, Impl},
  {0x29, NOP, Impl},
  {0x2a, NOP, Impl},
  {0x2b, NOP, Impl},
  {0x2c, NOP, Impl},
  {0x2d, NOP, Impl},
  {0x2e, NOP, Impl},
  {0x2f, NOP, Impl},
  {0x30, NOP, Impl},
  {0x31, NOP, Impl},
  {0x32, NOP, Impl},
  {0x33, NOP, Impl},
  {0x34, NOP, Impl},
  {0x35, NOP, Impl},
  {0x36, NOP, Impl},
  {0x37, NOP, Impl},
  {0x38, SEC, Impl},
  {0x39, NOP, Impl},
  {0x3a, NOP, Impl},
  {0x3b, NOP, Impl},
  {0x3c, NOP, Impl},
  {0x3d, NOP, Impl},
  {0x3e, NOP, Impl},
  {0x3f, NOP, Impl},
  {0x40, NOP, Impl},
  {0x41, NOP, Impl},
  {0x42, NOP, Impl},
  {0x43, NOP, Impl},
  {0x44, NOP, Impl},
  {0x45, NOP, Impl},
  {0x46, NOP, Impl},
  {0x47, NOP, Impl},
  {0x48, NOP, Impl},
  {0x49, NOP, Impl},
  {0x4a, NOP, Impl},
  {0x4b, NOP, Impl},
  {0x4c, NOP, Impl},
  {0x4d, NOP, Impl},
  {0x4e, NOP, Impl},
  {0x4f, NOP, Impl},
  {0x50, NOP, Impl},
  {0x51, NOP, Impl},
  {0x52, NOP, Impl},
  {0x53, NOP, Impl},
  {0x54, NOP, Impl},
  {0x55, NOP, Impl},
  {0x56, NOP, Impl},
  {0x57, NOP, Impl},
  {0x58, NOP, Impl},
  {0x59, NOP, Impl},
  {0x5a, NOP, Impl},
  {0x5b, NOP, Impl},
  {0x5c, NOP, Impl},
  {0x5d, NOP, Impl},
  {0x5e, NOP, Impl},
  {0x5f, NOP, Impl},
  {0x60, NOP, Impl},
  {0x61, ADC, _ZPX_},
  {0x62, NOP, Impl},
  {0x63, NOP, Impl},
  {0x64, NOP, Impl},
  {0x65, ADC, ZP},
  {0x66, NOP, Impl},
  {0x67, NOP, Impl},
  {0x68, NOP, Impl},
  {0x69, ADC, Imm},
  {0x6a, NOP, Impl},
  {0x6b, NOP, Impl},
  {0x6c, NOP, Impl},
  {0x6d, ADC, Abs},
  {0x6e, NOP, Impl},
  {0x6f, NOP, Impl},
  {0x70, NOP, Impl},
  {0x71, ADC, _ZP_Y},
  {0x72, NOP, Impl},
  {0x73, NOP, Impl},
  {0x74, NOP, Impl},
  {0x75, ADC, ZPX},
  {0x76, NOP, Impl},
  {0x77, NOP, Impl},
  {0x78, NOP, Impl},
  {0x79, ADC, AbsY},
  {0x7a, NOP, Impl},
  {0x7b, NOP, Impl},
  {0x7c, NOP, Impl},
  {0x7d, ADC, AbsX},
  {0x7e, NOP, Impl},
  {0x7f, NOP, Impl},
  {0x80, NOP, Impl},
  {0x81, STA, _ZPX_},
  {0x82, NOP, Impl},
  {0x83, NOP, Impl},
  {0x84, NOP, Impl},
  {0x85, STA, ZP},
  {0x86, NOP, Impl},
  {0x87, NOP, Impl},
  {0x88, DEY, Impl},
  {0x89, NOP, Impl},
  {0x8a, TXA, Impl},
  {0x8b, NOP, Impl},
  {0x8c, NOP, Impl},
  {0x8d, STA, Abs},
  {0x8e, NOP, Impl},
  {0x8f, NOP, Impl},
  {0x90, NOP, Impl},
  {0x91, STA, _ZP_Y},
  {0x92, NOP, Impl},
  {0x93, NOP, Impl},
  {0x94, NOP, Impl},
  {0x95, STA, ZPX},
  {0x96, NOP, Impl},
  {0x97, NOP, Impl},
  {0x98, TYA, Impl},
  {0x99, STA, AbsY},
  {0x9a, NOP, Impl},
  {0x9b, NOP, Impl},
  {0x9c, NOP, Impl},
  {0x9d, STA, AbsX},
  {0x9e, NOP, Impl},
  {0x9f, NOP, Impl},
  {0xa0, LDY, Imm},
  {0xa1, LDA, _ZPX_},
  {0xa2, LDX, Imm},
  {0xa3, NOP, Impl},
  {0xa4, LDY, ZP},
  {0xa5, LDA, ZP},
  {0xa6, LDX, ZP},
  {0xa7, NOP, Impl},
  {0xa8, TAY, Impl},
  {0xa9, LDA, Imm},
  {0xaa, TAX, Impl},
  {0xab, NOP, Impl},
  {0xac, LDY, Abs},
  {0xad, LDA, Abs},
  {0xae, LDX, Abs},
  {0xaf, NOP, Impl},
  {0xb0, NOP, Impl},
  {0xb1, LDA, _ZP_Y},
  {0xb2, NOP, Impl},
  {0xb3, NOP, Impl},
  {0xb4, LDY, ZPX},
  {0xb5, LDA, ZPX},
  {0xb6, LDX, ZPY},
  {0xb7, NOP, Impl},
  {0xb8, NOP, Impl},
  {0xb9, LDA, AbsY},
  {0xba, NOP, Impl},
  {0xbb, NOP, Impl},
  {0xbc, LDY, AbsX},
  {0xbd, LDA, AbsX},
  {0xbe, LDX, AbsY},
  {0xbf, NOP, Impl},
  {0xc0, NOP, Impl},
  {0xc1, NOP, Impl},
  {0xc2, NOP, Impl},
  {0xc3, NOP, Impl},
  {0xc4, NOP, Impl},
  {0xc5, NOP, Impl},
  {0xc6, DEC, ZP},
  {0xc7, NOP, Impl},
  {0xc8, INY, Impl},
  {0xc9, NOP, Impl},
  {0xca, DEX, Impl},
  {0xcb, NOP, Impl},
  {0xcc, NOP, Impl},
  {0xcd, NOP, Impl},
  {0xce, DEC, Abs},
  {0xcf, NOP, Impl},
  {0xd0, NOP, Impl},
  {0xd1, NOP, Impl},
  {0xd2, NOP, Impl},
  {0xd3, NOP, Impl},
  {0xd4, NOP, Impl},
  {0xd5, NOP, Impl},
  {0xd6, DEC, ZPX},
  {0xd7, NOP, Impl},
  {0xd8, CLD, Impl},
  {0xd9, NOP, Impl},
  {0xda, NOP, Impl},
  {0xdb, NOP, Impl},
  {0xdc, NOP, Impl},
  {0xdd, NOP, Impl},
  {0xde, DEC, AbsX},
  {0xdf, NOP, Impl},
  {0xe0, NOP, Impl},
  {0xe1, NOP, Impl},
  {0xe2, NOP, Impl},
  {0xe3, NOP, Impl},
  {0xe4, NOP, Impl},
  {0xe5, NOP, Impl},
  {0xe6, INC, ZP},
  {0xe7, NOP, Impl},
  {0xe8, INX, Impl},
  {0xe9, NOP, Impl},
  {0xea, NOP, Impl},
  {0xeb, NOP, Impl},
  {0xec, NOP, Impl},
  {0xed, NOP, Impl},
  {0xee, INC, Abs},
  {0xef, NOP, Impl},
  {0xf0, NOP, Impl},
  {0xf1, NOP, Impl},
  {0xf2, NOP, Impl},
  {0xf3, NOP, Impl},
  {0xf4, NOP, Impl},
  {0xf5, NOP, Impl},
  {0xf6, INC, ZPX},
  {0xf7, NOP, Impl},
  {0xf8, SED, Impl},
  {0xf9, NOP, Impl},
  {0xfa, NOP, Impl},
  {0xfb, NOP, Impl},
  {0xfc, NOP, Impl},
  {0xfd, NOP, Impl},
  {0xfe, INC, AbsX},
  {0xff, NOP, Impl}
};

#endif
